package edu.up.a15squareshw2;

import static edu.up.a15squareshw2.R.id.btn15;

import android.graphics.Color;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class Controller extends MainActivity implements View.OnClickListener {
    private int moves = 0;
    public int pos = 16;
    private int[] vals = new int[15];
    public int up;
    public int down;
    public int left;
    public int right;
    private int blankPos = 16;
    private int prevId = R.id.btn16;
    private int currId = R.id.btn16;
    MainActivity main = new MainActivity();

    public Controller(Button btn) {

    }

    @Override
    public void onClick(View view) {

        int p = pos;
        int id = prevId;
        //pos = main.getPos();

        up = findPossible(pos, 1);

        down = findPossible(pos, 2);

        left = findPossible(pos, 3);

        right = findPossible(pos, 4);

        switch(view.getId()) {
            case R.id.btn1:
                if (1 == up || 1 == down || 1 == left || 1 == right) {
                    Log.i("solve", "Button 1 was clicked");
                    pos = 1;
                    id = R.id.btn1;
                }
                //do something
                break;
            case R.id.btn2:
                if (2 == up || 2 == down || 2 == left || 2 == right) {
                    Log.i("solve", "Button 2 was clicked");
                    pos = 2;
                    id = R.id.btn2;
                }
                //do something
                break;
            case R.id.btn3:
                if (3 == up || 3 == down || 3 == left || 3 == right) {
                    Log.i("solve", "Button 3 was clicked");
                    pos = 3;
                    id = R.id.btn3;
                }
                //do something
                break;
            case R.id.btn4:
                if (4 == up || 4 == down || 4 == left || 4 == right) {
                    Log.i("solve", "Button 4 was clicked");
                    pos = 4;
                    id = R.id.btn4;
                }
                //do something
                break;
            case R.id.btn5:
                if (5 == up || 5 == down || 5 == left || 5 == right) {
                    Log.i("solve", "Button 5 was clicked");
                    pos = 5;
                    id = R.id.btn5;
                }
                //do something
                break;
            case R.id.btn6:
                if (6 == up || 6 == down || 6 == left || 6 == right) {
                    Log.i("solve", "Button 6 was clicked");
                    pos = 6;
                    id = R.id.btn6;
                }
                //do something
                break;
            case R.id.btn7:
                if (7 == up || 7 == down || 7 == left || 7 == right) {
                    Log.i("solve", "Button 7 was clicked");
                    pos = 7;
                    id = R.id.btn7;
                }
                //do something
                break;
            case R.id.btn8:
                if (8 == up || 8 == down || 8 == left || 8 == right) {
                    Log.i("solve", "Button 8 was clicked");
                    pos = 8;
                    id = R.id.btn8;
                }
                //do something
                break;
            case R.id.btn9:
                if (9 == up || 9 == down || 9 == left || 9 == right) {
                    Log.i("solve", "Button 9 was clicked");
                    pos = 9;
                    id = R.id.btn9;
                }
                //do something
                break;
            case R.id.btn10:
                if (10 == up || 10 == down || 10 == left || 10 == right) {
                    Log.i("solve", "Button 10 was clicked");
                    pos = 10;
                    id = R.id.btn10;
                }
                //do something
                break;
            case R.id.btn11:
                if (11 == up || 11 == down || 11 == left || 11 == right) {
                    Log.i("solve", "Button 11 was clicked");
                    pos = 11;
                    id = R.id.btn11;
                }
                //do something
                break;
            case R.id.btn12:
                if (12 == up || 12 == down || 12 == left || 12 == right) {
                    Log.i("solve", "Button 12 was clicked");
                    pos = 12;
                    id = R.id.btn12;
                }
                //do something
                break;
            case R.id.btn13:
                if (13 == up || 13 == down || 13 == left || 13 == right) {
                    Log.i("solve", "Button 13 was clicked");
                    pos = 13;
                    id = R.id.btn13;
                }
                //do something
                break;
            case R.id.btn14:
                if (14 == up || 14 == down || 14 == left || 14 == right) {
                    Log.i("solve", "Button 14 was clicked");
                    pos = 14;
                    id = R.id.btn14;
                }
                //do something
                break;
            case R.id.btn15:
                Log.i("solve", "Button 15 was clicked. ID: " + id + " Pos: " + pos);
                if (15 == up || 15 == down || 15 == left || 15 == right) {

                    pos = 15;
                    id = R.id.btn15;
               }

                // all values are 0... this sucks

                //do something
                break;
            case R.id.btn16:
                if (16 == up || 16 == down || 16 == left || 16 == right) {
                    Log.i("solve", "Button 16 was clicked");
                    pos = 16;
                    id = R.id.btn16;
                }
                //do something
                break;
        }

        //Log.i("solve", "Position found -- " + pos + " ID: " + id);

        if (id != 0) {
            //main.setId(id);

            // Assign blankPos to pos
            //blankPos = pos;
            Log.i("solve", "ID: " + id + " Pos: " + pos);
            //selected = findViewById(id);
            //selected.setBackgroundColor(Color.parseColor("#FF00FF"));

            // Assign pos to blankPos
            //blank = findViewById(id);
            //blank.setBackgroundColor(Color.parseColor("#000000"));

            //pos = blankPos;
        }
        // SWAP THE VALUES!!!!
        // THEN DETERMINE IF THE PUZZLE IS SOLVED
    }

    private int findPossible(int pos, int i) {
        int p = pos;
        boolean[] paths = new boolean[4];

        switch(i) {
            case 1:
                // Up
                if (p - 4 > 0) {
                    up = p - 4;
                    paths[0] = true;
                }
                return up;
            case 2:
                // Down
                if (p + 4 < 16) {
                    down = p + 4;
                    paths[1] = true;
                }
                return down;
            case 3:
                // Left
                if ((p - 1) % 4 != 0) {
                    left = p - 1;
                    paths[2] = true;
                }
                return left;
            case 4:
                // Right
                if (p % 4 != 0) {
                    right = p + 1;
                    paths[3] = true;
                }
                return right;
        }


        Log.i("solve", "Left: " + left + " Right: " + right + " Up: " + up + " Down: " + down);
        return 0;
    }

    public int setPos(int p) {
        p = pos;
        return p;
    }
}
